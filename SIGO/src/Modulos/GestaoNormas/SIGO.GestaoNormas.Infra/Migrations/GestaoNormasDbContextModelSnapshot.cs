// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGO.GestaoNormas.Infra.Context;

namespace SIGO.GestaoNormas.Infra.Migrations
{
    [DbContext(typeof(GestaoNormasDbContext))]
    partial class GestaoNormasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SIGO.GestaoNormas.Domain.Entities.Norma", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(200);

                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasMaxLength(36);

                    b.Property<int>("RepositorioID")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(100);

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("RepositorioID");

                    b.ToTable("Normas");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataCriacao = new DateTime(2020, 10, 4, 1, 1, 47, 750, DateTimeKind.Local).AddTicks(8232),
                            Descricao = "Norma de Criação de Agentes de Conversação criada por Hitalo de Araujo",
                            GUID = new Guid("1803e4a4-ce59-4abb-a004-0a1a3a2391f7"),
                            RepositorioID = 1,
                            Titulo = "Norma de Criação de Agentes de Conversação",
                            URL = "https://github.com/HitaloDeAraujo/AgenteConversacao/blob/master/HITALO%20ARAUJO%20PROJETO%20E%20DESENVOLVIMENTO%20DE%20UM%20ARCABOU%C3%87O%20DE%20AGENTE%20DE%20CONVERSA%C3%87%C3%83O%20-%2011.pdf"
                        });
                });

            modelBuilder.Entity("SIGO.GestaoNormas.Domain.Entities.Repositorio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(200);

                    b.Property<string>("GUID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasMaxLength(36);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(100);

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Repositorios");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataCriacao = new DateTime(2020, 10, 4, 1, 1, 47, 748, DateTimeKind.Local).AddTicks(4077),
                            Descricao = "Repositório de Hitalo de Araujo",
                            GUID = "4b1a7128-2c66-482a-8117-0faba2b69c40",
                            Nome = "Hitalo de Araujo",
                            URL = "https://github.com/HitaloDeAraujo"
                        });
                });

            modelBuilder.Entity("SIGO.GestaoNormas.Domain.Entities.Norma", b =>
                {
                    b.HasOne("SIGO.GestaoNormas.Domain.Entities.Repositorio", "Repositorio")
                        .WithMany("Normas")
                        .HasForeignKey("RepositorioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
