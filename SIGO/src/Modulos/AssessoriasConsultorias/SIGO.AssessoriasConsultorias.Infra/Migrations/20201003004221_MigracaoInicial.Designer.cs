// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGO.AssessoriasConsultorias.Infra.Context;

namespace SIGO.AssessoriasConsultorias.Infra.Migrations
{
    [DbContext(typeof(AssessoriasConsultoriasDbContext))]
    [Migration("20201003004221_MigracaoInicial")]
    partial class MigracaoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SIGO.AssessoriasConsultorias.Domain.Entities.Contrato", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(200);

                    b.Property<string>("GUID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasMaxLength(36);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(100);

                    b.Property<int>("ParceiroID")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ParceiroID");

                    b.ToTable("Contratos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataCriacao = new DateTime(2020, 10, 2, 21, 42, 21, 45, DateTimeKind.Local).AddTicks(9179),
                            Descricao = "Descrição 1",
                            GUID = "dd5f8dab-ebf9-48f0-a6bd-e0feb2971e42",
                            Nome = "Contrato 1",
                            ParceiroID = 1,
                            URL = "URL"
                        });
                });

            modelBuilder.Entity("SIGO.AssessoriasConsultorias.Domain.Entities.Parceiro", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(200);

                    b.Property<string>("GUID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasMaxLength(36);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(100);

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("Parceiros");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataCriacao = new DateTime(2020, 10, 2, 21, 42, 21, 42, DateTimeKind.Local).AddTicks(8966),
                            Descricao = "Descrição 1",
                            GUID = "1a5dce47-250a-40c9-9c60-55a819e6c757",
                            Nome = "Contrato 1",
                            Tipo = (short)0
                        });
                });

            modelBuilder.Entity("SIGO.AssessoriasConsultorias.Domain.Entities.Contrato", b =>
                {
                    b.HasOne("SIGO.AssessoriasConsultorias.Domain.Entities.Parceiro", "Parceiro")
                        .WithMany("Contratos")
                        .HasForeignKey("ParceiroID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
