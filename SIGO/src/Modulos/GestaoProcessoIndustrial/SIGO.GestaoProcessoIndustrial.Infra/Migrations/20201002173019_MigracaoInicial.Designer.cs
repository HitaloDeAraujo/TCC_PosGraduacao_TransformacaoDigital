// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGO.GestaoProcessoIndustrial.Infra.Context;

namespace SIGO.GestaoProcessoIndustrial.Infra.Migrations
{
    [DbContext(typeof(GestaoProcessoIndustrialDbContext))]
    [Migration("20201002173019_MigracaoInicial")]
    partial class MigracaoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SIGO.GestaoProcessoIndustrial.Domain.Entities.Evento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(200);

                    b.Property<string>("GUID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasMaxLength(36);

                    b.Property<int>("Grau")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(100);

                    b.Property<int>("TipoEventoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipoEventoID");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataCriacao = new DateTime(2020, 10, 2, 14, 30, 18, 458, DateTimeKind.Local).AddTicks(2402),
                            Descricao = "Desc",
                            GUID = "91ab59ec-a097-4009-bc46-feef53c2bdc7",
                            Grau = 1,
                            Nome = "Norma Cadastrada",
                            TipoEventoID = 1
                        });
                });

            modelBuilder.Entity("SIGO.GestaoProcessoIndustrial.Domain.Entities.TipoEvento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("TiposEvento");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataCriacao = new DateTime(2020, 10, 2, 14, 30, 18, 452, DateTimeKind.Local).AddTicks(7584),
                            Nome = "Norma Cadastrada"
                        },
                        new
                        {
                            ID = 2,
                            DataCriacao = new DateTime(2020, 10, 2, 14, 30, 18, 455, DateTimeKind.Local).AddTicks(3215),
                            Nome = "Norma Atualizada"
                        });
                });

            modelBuilder.Entity("SIGO.GestaoProcessoIndustrial.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("GUID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasMaxLength(36);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataCriacao = new DateTime(2020, 10, 2, 14, 30, 18, 458, DateTimeKind.Local).AddTicks(9454),
                            GUID = "cf78be93-bd6a-4bbc-b36a-9850fedd107a",
                            Nome = "Hitalo"
                        });
                });

            modelBuilder.Entity("SIGO.GestaoProcessoIndustrial.Domain.Entities.Evento", b =>
                {
                    b.HasOne("SIGO.GestaoProcessoIndustrial.Domain.Entities.TipoEvento", "TipoEvento")
                        .WithMany("Eventos")
                        .HasForeignKey("TipoEventoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
